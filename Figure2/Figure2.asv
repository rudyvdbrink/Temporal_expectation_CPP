clear
close all
clc

%add functions
%in addition to these functions you'll need EEGLAB
homedir = mfilename('fullpath');
funcdir = [homedir(1:end-15) 'functions'];
addpath(genpath(funcdir)); %folder with supporting functions
addpath(genpath(homedir(1:end-7))); %folder where this scrip is stored
%%

%modeldata contains the model parameters of the individual participants.
%this variable has N rows (participants) and 9 columns (variables). The
%variables are as follows:
%
%1) v (drift rate) on catch trials
%2) v (drift rate) on valid easy trials
%3) v (drift rate) on valid difficult trials
%4) v (drift rate) on invalid easy trials
%5) v (drift rate) on invalid difficult trials
%6) Ter (non decision time) on catch trials
%7) Ter (non decision time) on valid trials
%8) Ter (non decision time) on invalid trials
%9) Threshold


% The matrix 'bhvdat' contains the behavioral data, and has 18 columns:
%1) RT on short interval, validly cued, easy
%2) RT on short interval, validly cued, difficult
%3) RT on short interval, invalidly cued, easy
%4) RT on short interval, invalidly cued, difficult
%5) RT on long interval, validly cued, easy
%6) RT on long interval, validly cued, difficult
%7) RT on long interval, invalidly cued, easy
%8) RT on long interval, invalidly cued, difficult

%9)  Accuracy on short interval, validly cued, easy
%10) Accuracy on short interval, validly cued, difficult
%11) Accuracy on short interval, invalidly cued, easy
%12) Accuracy on short interval, invalidly cued, difficult
%13) Accuracy on long interval, validly cued, easy
%14) Accuracy on long interval, validly cued, difficult
%15) Accuracy on long interval, invalidly cued, easy
%16) Accuracy on long interval, invalidly cued, difficult

%17) False alarm rate on non-catch trials
%18) False alarm rate on catch trials 

% Each row in the data matrix is a participant.

load data.mat


%% load the posteriors, make histograms, and calculate p-values


alpha = 0.5; %transparancy of the histograms

%load the posterior distributions
tvalid   = dlmread('tvalid.csv'); %non-decision time on valid trials
tinvalid = dlmread('tinvalid.csv'); %non-decision time on invalid trials
veasyvalid   = dlmread('veasyvalid.csv'); %drift rate on valid easy trials
veasyinvalid = dlmread('veasyinvalid.csv'); %drift rate on invalid easy trials
vhardvalid   = dlmread('vhardvalid.csv'); %drift rate on valid difficult trials
vhardinvalid = dlmread('vhardinvalid.csv'); %drift rate on invalid difficult trials

figure

% plot non-decision time
subplot(2,3,2)
hold on

x  = 0.2:0.001:0.4; %range for histogram

pd = fitdist(tvalid,'kernel');
y  = pdf(pd,x); y = y/sum(y) * 100;
patch(x,y,[0 0.8 0],'edgecolor','none','facealpha',alpha)
hold on
plot([mean(squeeze(modeldata(:,7))) mean(squeeze(modeldata(:,7)))], [0 max(y)], '--', 'color', [0 0.8 0],'linewidth',2)

pd = fitdist(tinvalid,'kernel');
y  = pdf(pd,x); y = y/sum(y) * 100;
patch(x,y,[0 0.4 0],'edgecolor','none','facealpha',alpha)
hold on
plot([mean(squeeze(modeldata(:,8))) mean(squeeze(modeldata(:,8)))], [0 max(y)], '--', 'color', [0 0.4 0],'linewidth',2)

xlim([0.23 0.33])
title('T_{er}')
set(gca,'tickdir','out','fontsize',18,'linewidth',1)
xlabel('Parameter estimate (a.u.)')
ylabel('Frequency of occurance (%)')

%get p-value
p = sum(tvalid > tinvalid) / length(tvalid);
text(0.275, 7, ['p = ' num2str(round(p*1000)/1000)],'FontSize',15)

%plot drift rate
subplot(2,3,3)
hold on

x  = 1:0.001:5; %range for histogram

pd = fitdist(veasyvalid,'kernel');
y  = pdf(pd,x); y = y/sum(y) * 100;
patch(x,y,[0 0 0.8],'edgecolor','none','facealpha',alpha)
hold on
plot([mean(squeeze(modeldata(:,2))) mean(squeeze(modeldata(:,2)))], [0 max(y)], '--', 'color', [0 0 0.8],'linewidth',2)

pd = fitdist(vhardvalid,'kernel');
y  = pdf(pd,x); y = y/sum(y) * 100;
patch(x,y,[0.8 0 0],'edgecolor','none','facealpha',alpha)
hold on
plot([mean(squeeze(modeldata(:,3))) mean(squeeze(modeldata(:,3)))], [0 max(y)], '--', 'color', [0.8 0 0],'linewidth',2)

pd = fitdist(veasyinvalid,'kernel');
y  = pdf(pd,x); y = y/sum(y) * 100;
patch(x,y,[0 0 0.4],'edgecolor','none','facealpha',alpha)
hold on
plot([mean(squeeze(modeldata(:,4))) mean(squeeze(modeldata(:,4)))], [0 max(y)], '--', 'color', [0 0 0.4],'linewidth',2)

pd = fitdist(vhardinvalid,'kernel');
y  = pdf(pd,x); y = y/sum(y) * 100;
patch(x,y,[0.4 0 0],'edgecolor','none','facealpha',alpha)
hold on
plot([mean(squeeze(modeldata(:,5))) mean(squeeze(modeldata(:,5)))], [0 max(y)], '--', 'color', [0.4 0 0],'linewidth',2)

xlim([1.5 3.5])
ylim([0 0.4])
set(gca,'tickdir','out','fontsize',18,'linewidth',1)
title('v')
xlabel('Parameter estimate (a.u.)')
ylabel('Frequency of occurance (%)')




%validity effect on drift rate, collapsed across difficulty conditions (not
%used for plotting, but p-value is reported in the paper)
% p = sum([vhardinvalid; veasyinvalid] > [vhardvalid; veasyvalid]) / (length(vhardvalid)*2);

%difficulty effect on drift rate, collapsed across validity conditions
p = sum([vhardinvalid; vhardvalid] > [veasyinvalid; veasyvalid]) / (length(vhardvalid)*2);
text(2.4, 0.35, ['p = ' num2str(round(p*1000)/1000)],'FontSize',15)

%validity effect on drift rate (difficult trials only) 
p = sum(vhardinvalid > vhardvalid) / length(vhardvalid);
text(2, 0.29, ['p = ' num2str(round(p*1000)/1000)],'FontSize',15)

%validity effect on drift rate (easy trials only) 
p = sum(veasyinvalid > veasyvalid) / length(veasyvalid);
text(2.7, 0.29, ['p = ' num2str(round(p*1000)/1000)],'FontSize',15)


%% Simulate behavioral data using the model parameters

clear resp simdata
c = 1.0;
maxrt = 1.0147;
for subi = 1:size(modeldata,1)

    resp = diffProcess('c',c,'a',modeldata(subi,end),'v',modeldata(subi,2),'Ter',modeldata(subi,7));
    simdata(subi,1,1) = squeeze(mean(resp(resp(:,2)==1 & resp(:,1) < maxrt,1))); %correct RT, valid, easy
    
    resp = diffProcess('c',c,'a',modeldata(subi,end),'v',modeldata(subi,3),'Ter',modeldata(subi,7));
    simdata(subi,1,2) = squeeze(mean(resp(resp(:,2)==1 & resp(:,1) < maxrt,1))); %correct RT, valid, difficult
    
    resp = diffProcess('c',c,'a',modeldata(subi,end),'v',modeldata(subi,4),'Ter',modeldata(subi,8));
    simdata(subi,2,1) = squeeze(mean(resp(resp(:,2)==1 & resp(:,1) < maxrt,1))); %correct RT, invalid, easy
    
    resp = diffProcess('c',c,'a',modeldata(subi,end),'v',modeldata(subi,5),'Ter',modeldata(subi,8));
    simdata(subi,2,2) = squeeze(mean(resp(resp(:,2)==1 & resp(:,1) < maxrt,1))); %correct RT, invalid, difficult
end

simdata = simdata * 1000; %scale to ms


%%
% 
% %load empirical behavioral data
% bhvdat = dlmread('C:\DATA\TESD\data4upload\Figure1\data.txt');
% 
% subplot(2,3,1)
% hold on
% 
% xo = 0.2;
% for condi = 1:4
%    bar(condi-xo, squeeze(mean(bhvdat(:,condi))),0.4,'edgecolor','none','FaceColor',[0 .2 .5])   
%    bar(condi+xo, squeeze(mean(simdata(:,condi))),0.4,'edgecolor','none','FaceColor',[0 .8 .5])
% end
% 
% eb = wse(bhvdat(:,1:4));
% plot([1:4; 1:4]-xo, [mean(bhvdat(:,1:4))-eb; mean(bhvdat(:,1:4))+eb],'k','LineWidth',2) 
% eb = wse(simdata(:,1:4));
% plot([1:4; 1:4]+xo, [mean(simdata(:,1:4))-eb; mean(simdata(:,1:4))+eb],'k','LineWidth',2) 
% ylim([420 540])
% 
% labels = { 'valid easy' , 'valid difficult', 'invalid easy' , 'invalid difficult'};
% labels = cellfun(@(x) strrep(x,' ','\newline'), labels,'UniformOutput',false);
% set(gca,'xtick',1:4,'XTickLabel',labels,'tickdir','out','fontsize',18,'linewidth',1)
% ylabel('RT (ms)')

%% scatter plot of model and data

subplot(2,3,1)

bhvdat = dlmread('C:\DATA\TESD\data4upload\Figure1\data.txt');


plotcolors = parula(4);

r = zeros(4,1);
p = zeros(size(r));
for condi = 1:4
    
    plot(squeeze(simdata(:,condi)),bhvdat(:,condi),'o','color',plotcolors(condi,:),'MarkerFaceColor',plotcolors(condi,:))
    hold on
    [r(condi) p(condi)] = corr(squeeze(simdata(:,condi)),bhvdat(:,condi));
    
    p = polyfit(squeeze(simdata(:,condi)),bhvdat(:,condi),1);
    y = squeeze(simdata(:,condi)).*p(1) + p(2);
    plot(squeeze(simdata(:,condi)),y,'-','color',plotcolors(condi,:),'LineWidth',2)
        
end

xeb = std(simdata(:,:))./sqrt(size(simdata,1)); %within-subect error bar for the model data
yeb = std(bhvdat(:,1:4))./sqrt(size(simdata,1));%within-subject error bar for the real data
for condi = 1:4
    plot(squeeze(mean(simdata(:,condi))),squeeze(mean(bhvdat(:,condi))),'ko','MarkerFaceColor',plotcolors(condi,:),'markersize',10) %plot mean
    plot([squeeze(mean(simdata(:,condi))) squeeze(mean(simdata(:,condi)))], [squeeze(mean(bhvdat(:,condi)))-yeb(condi) squeeze(mean(bhvdat(:,condi)))+yeb(condi)],'k','LineWidth',2) %plot error bar (for real data)
    plot([squeeze(mean(simdata(:,condi)))-xeb(condi) squeeze(mean(simdata(:,condi)))+xeb(condi)], [squeeze(mean(bhvdat(:,condi))) squeeze(mean(bhvdat(:,condi)))],'k','LineWidth',2) %plot error bar (for model)
end

ylim([300 700])
xlim([300 700])
axis square
set(gca,'tickdir','out','fontsize',18,'linewidth',1)
box off
xlabel('RT model (ms)')
ylabel('RT data (ms)')
%%
% 
figure
subplot(2,3,3)

plot( [1 2],[squeeze(mean(simdata(:,1,1))) squeeze(mean(simdata(:,2,1)))] ,'bo-','linewidth',3,'markerfacecolor','b')
hold on
plot( [1 2],[squeeze(mean(simdata(:,1,2))) squeeze(mean(simdata(:,2,2)))] ,'bs--','linewidth',3,'markerfacecolor','b')

set(gca,'xtick',[1 2],'xticklabel', {'valid' , 'invalid'},'tickdir','out','fontsize',18,'linewidth',1)
xlabel('cue validity')
ylabel('RT (ms)')
box off
xlim([0 3])
axis square

m = mean(simdata(:,:,1)); %easy trials
s = wse(squeeze(simdata(:,:,1)));
plot([1 2; 1 2], [m-s; m+s;],'k','linewidth',3);

m = mean(simdata(:,:,2)); %difficult trials
s = wse(squeeze(simdata(:,:,2)));
plot([1 2; 1 2], [m-s; m+s;],'k','linewidth',3);
% ylim([400 600])

% title('Model')

%

data = dlmread('C:\DATA\TESD\data4upload\Figure1\data.txt');

%RT
% subplot(2,2,2)
hold on
% title('Data')
plot([1 2],mean(data(:,[1 3])),'ko-','linewidth',3,'markerfacecolor','k')
plot([1 2],mean(data(:,[2 4])),'ks--','linewidth',3,'markerfacecolor','k')
xlim([0 3])
set(gca,'xtick',[1 2],'xticklabel', {'valid' , 'invalid'},'tickdir','out','fontsize',18,'linewidth',1)
xlabel('cue validity')
ylabel('RT (ms)')
 
axis square
s = std(data(:,[1 3])-[mean(data(:,[1 3]),2) mean(data(:,[1 3]),2)])/sqrt(size(data,1));
m = mean(data(:,[1 3]));
plot([1 2; 1 2], [m-s; m+s;],'k','linewidth',3);

s = std(data(:,[2 4])-[mean(data(:,[2 4]),2) mean(data(:,[2 4]),2)])/sqrt(size(data,1));
m = mean(data(:,[2 4]));
plot([1 2; 1 2], [m-s; m+s;],'k','linewidth',3);
% ylim([400 600])


%% load the posteriors and plot
% 
% subplot(2,2,2)
% hold on
% 
% x  = 1:0.001:5;
% 
% 
% a = dlmread('veasyvalid.csv');
% pd = fitdist(a,'kernel');
% y  = pdf(pd,x);
% patch(x,y,[0 0 0.8])
% 
% a = dlmread('vhardvalid.csv');
% pd = fitdist(a,'kernel');
% y  = pdf(pd,x);
% patch(x,y,[0.8 0 0])
% 
% a = dlmread('veasyinvalid.csv');
% pd = fitdist(a,'kernel');
% y  = pdf(pd,x);
% patch(x,y,[0 0 0.4])
% 
% a = dlmread('vhardinvalid.csv');
% pd = fitdist(a,'kernel');
% y  = pdf(pd,x);
% patch(x,y,[0.4 0 0])
% 
% xlim([1 4])


%%

% addParamValue(p, 'numTr', 1500); %number of trials (iteration of the simulation)
% addParamValue(p, 'a',0.16 ); %upper threshold
% addParamValue(p, 'b', []); %lower threshold. If []. b=0
% addParamValue(p, 'z', []); %starting point, if [] then z=a/2
% 
% addParamValue(p, 'v', 0.3); %drift rate within trial
% addParamValue(p, 'Ter', .26);  %Non decision time
% addParamValue(p, 'st', 0); %variability in the non decision time
% addParamValue(p, 'eta', 0);  %variability in drift rate across trial
% addParamValue(p, 'sz', 0);  %variability in starting point
% addParamValue(p, 'c', 0.1); %std within trial, put [] is you want it to calculate for you
% addParamValue(p, 'tau', 0.0001); %step
% %notice that s
% addParamValue(p, 'maxWalk', 2500); %the number of points for each trunck of cumsum

% clear resp simdata
% for subi = 1:size(modeldata,1)
% 
%     resp = diffProcess('a',modeldata(subi,end),'b',-Inf,'v',modeldata(subi,2),'Ter',modeldata(subi,7));
%     simdata(subi,1,1) = squeeze(mean(resp(resp(:,2)==1,1))); %correct RT, valid, easy
%     
%     resp = diffProcess('a',modeldata(subi,end),'b',-Inf,'v',modeldata(subi,3),'Ter',modeldata(subi,7));
%     simdata(subi,1,2) = squeeze(mean(resp(resp(:,2)==1,1))); %correct RT, valid, difficult
%     
%     resp = diffProcess('a',modeldata(subi,end),'b',-Inf,'v',modeldata(subi,4),'Ter',modeldata(subi,8));
%     simdata(subi,2,1) = squeeze(mean(resp(resp(:,2)==1,1))); %correct RT, invalid, easy
%     
%     resp = diffProcess('a',modeldata(subi,end),'b',-Inf,'v',modeldata(subi,5),'Ter',modeldata(subi,8));
%     simdata(subi,2,2) = squeeze(mean(resp(resp(:,2)==1,1))); %correct RT, invalid, difficult
% end
% 
% simdata = simdata * 1000; %scale to ms



% ylim([420 540])


%%


% 
% histfit(a,200,'normal');
% 
% figure, 
% 
% plot(h(2).XData,h(2).YData)
% 
% %%
% 
% pd = fitdist(a,'normal');
% x  = 2:0.001:4;
% y  = pdf(pd,x);
% 
% figure,
% patch(x,y,'b')





% subplot(2,3,4)
% hold on
% 
% x  = 0.2:0.001:0.4;
% % eb = wse(modeldata(:,7:8));
% % eb(:,1) = prctile(modeldata(:,7:8),33);
% % eb(:,2) = prctile(modeldata(:,7:8),66);
% yo = 3; %y offset to show mean
% 
% pd = fitdist(dlmread('tvalid.csv'),'kernel');
% y  = pdf(pd,x);
% patch(x,y,[0 0.8 0],'facealpha',0.5)
% hold on
% plot([mean(squeeze(modeldata(:,7))) mean(squeeze(modeldata(:,7)))], [0 max(y)], '--', 'color', 'k','linewidth',2)
% 
% pd = fitdist(dlmread('tinvalid.csv'),'kernel');
% y  = pdf(pd,x);
% patch(x,y,[0 0.4 0],'facealpha',0.5)
% hold on
% plot([mean(squeeze(modeldata(:,8))) mean(squeeze(modeldata(:,8)))], [0 max(y)], '--', 'color', 'k','linewidth',2)
% 
% % plot(mean(squeeze(modeldata(:,8))), max(y) + yo, 'o', 'markerfacecolor', [0 0.4 0],'MarkerEdgeColor','none')
% % plot([eb(2,1) eb(2,2)]',[max(y) + yo max(y) + yo]','-', 'color',[0 0.4 0])
% 
% xlim([0.2 0.4])

    